<%- include("../../partials/header.ejs") %>
    <div id="chat-container">
      <div id="search-container">
        <input type="text" placeholder="Search" />
      </div>
      <div id="conversation-list">
        <% conversationList.forEach(function(conversation) { %>
          
          <!-- conversation creator is same to logged in user, so we need to show participant name and avatar -->
          <%# if(conversation.creator.id == loggedInUser.userid) { %>
            
            <div class="conversation" onclick="getMessages('<%= conversation._id %>', '<%= conversation.title %>-<%= conversation.batch %>')">
              
              <img src="./images/male-user.png" alt="<%= conversation.title %>" />
              
              <div class="title-text"><%= conversation.title %>-<%= conversation.batch %></div>
              <div class="conversation-date"><%#= moment(conversation.last_updated).fromNow() %></div>
            </div>
          <%# } else { %>
            <!-- <div class="conversation" onclick="getMessages('<%#= conversation._id %>', '<%#= conversation.creator.name %>')">
              <%# if (conversation.creator.avatar) { %>
              <img src="./uploads/avatars/<%#= conversation.creator.avatar %>" alt="<%#= conversation.creator.name %>" />
              <%# } else { %>
                <img src="./images/nophoto.png" />
              <%# } %>
              <div class="title-text"><%#= conversation.creator.name %></div>
              <div class="conversation-date"><%#= moment(conversation.last_updated).fromNow() %></div>
            </div>
          <%# } %> -->
        <% }); %>
        
        <!-- show no conversation placeholder image for 0 conversations -->
        <% if(conversationList && conversationList.length === 0) { %>
          <div class="nothing"><img src="./images/no-conversation.svg"></div>
        <% } %>
      </div>

      <div id="chat-title">
        <span id="conversation-partner"></span>
        <!-- <img src="./images/trash.png" alt="Delete Conversation" /> -->
      </div>

      <!-- placeholder div if no messages are in messages area -->
      <div id="chat-message-list">
        <div class="nothing">select a conversation</div>
      </div>

      <!-- send message form -->
      <form id="chat-form" method="post" enctype="multipart/form-data">
        <label for="message"></label>
        <input type="text" name="message" placeholder="Type a message" autocomplete="off" />
        
      </form>

    </div>
    <%#- include('./partials/add-conversation-modal.ejs'); %>

    <!-- import socket io client from cdn -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.min.js"></script>

    <script>
      const form = document.querySelector('#chat-form');
      const messageContainer = document.querySelector('#chat-message-list');
      const chatTitleContainer = document.querySelector('#conversation-partner');
      const loggedinUserId = '<%= user._id %>';
      // const loggedinUserName = '<%#= loggedInUser.username %>';
      let participant = null; // selected conversation participant object
      let current_conversation_id; // selected conversation id
      
      // socket initialization
      const socket = io('<%= process.env.APP_URL %>');

      // handle new/live incoming message from socket
      socket.on("new_message", data => {

        console.log("inside socket");
        console.log("data.message.course: ", data.message.course);
        console.log("current_conversation_id: ", current_conversation_id);

        // only respond if current conversation is open in any client
        // if(data.message.course == current_conversation_id) {
          // message class
          const messageClass = data.message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
          
          const senderAvatar = `<img src="${data.message.sender.profilePics}" alt="${data.message.sender.name}" />`;
          
          let messageHTML;

          // do not show avatar for loggedin user
          if(data.message.sender.id == loggedinUserId) {
            messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
              <div class="message-text">${data.message.message}</div>
              <div class="message-time">${moment(data.message.date_time).fromNow()}</div>
            </div></div>`;
          } else {
            messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
              ${senderAvatar}
              <div class="message-text">${data.message.message}</div>
              
              <div class="message-time">${moment(data.message.date_time).fromNow()}</div>
            </div></div>`;
          }
          // append the inoming message to message area as last item
          document.querySelector('#chat-message-list > .message-row:first-child').insertAdjacentHTML('beforeBegin', messageHTML);
        /* }else{
          console.log("outside socket");
        } */
      });

      // get messages of a conversation
      async function getMessages(conversation_id, current_conversation_name){
        // messages failure toast
        /* const messagesFailureToast = Toastify({
          text: "Error loading messages!",
          duration: 1000,
        }); */
        let response = await fetch(`/inbox/messages/${conversation_id}`);
        const result= await response.json();
        console.log("messages: ", result);
        if(!result.errors && result.data) {
            form.style.visibility = 'visible';
            
            const {data, user, conversation_id} = result;
            participant = data.participant; // this is an array
            current_conversation_id = conversation_id;
            if(data.messages) {
              let allMessages = '';
              if(data.messages.length > 0) {
                data.messages.forEach((message) => {
                  // console.log("message: ", message.sender.profilePics);
                  let senderAvatar = `${message.sender.profilePics}`;
                  const messageClass = message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
                  const showAvatar = message.sender.id === loggedinUserId ? '' : `<img src="${senderAvatar}" alt="${message.sender.name}" />`;
                  
                  // final message html
                  let messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
                      ${showAvatar}
                      <div class="message-text">${message.message}</div>
                      <div class="message-time">${moment(message.date_time).fromNow()}</div>
                    </div></div>`;
                  allMessages += messageHTML;
                  messageContainer.innerHTML = allMessages;
                });
              } else if(data.messages.length === 0) {
                messageContainer.innerHTML = '<div class="nothing"><img src="./images/Empty-Trash-icon.png" /></div>';
              }
              chatTitleContainer.textContent = current_conversation_name;
            }
        } else {
          messagesFailureToast.showToast();
        }
    }
      // message sending
      form.onsubmit = async function (event) {
        event.preventDefault();
        /* const sendMessageFailureToast = Toastify({
          text: "Error sending message",
          duration: 1000,
        }); */

        // prepare the form data
        let formData = new FormData(form);
        formData.append('conversationId', current_conversation_id);

        // send the request to server
        let response = await fetch("/inbox/send-message", {
          method: "POST",
          body: formData,
        });

        // get response
        let result = await response.json();
        
        if (!result.errors) {
          form.reset(); // reset the form
        } else {
          // sendMessageFailureToast.showToast();
          console.log("error occured");
        }
      }
      
    </script>
  </body>
</html>