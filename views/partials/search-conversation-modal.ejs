<div class="modal-wrapper" id="search-conversation-modal">
    <div class="modal">
      <a onclick="closeModal()" class="modal-close">+</a>
      <div class="modal-title">
        <h2>Search Conversation</h2>
      </div>
      <div class="modal-body">
        <form id="search-conversation-form">
          <input
            type="text"
            placeholder="search conversation by name or batch or term"
            name="conversation"
            id="conversation-search"
            autocomplete="off"
          />
          <p class="error"></p>
          <div class="conversatins"></div>
          <input type="submit" value="Submit" class="hide" />
        </form>
      </div>
    </div>
  </div>
  <script>
    const modal = document.querySelector("#search-conversation-modal");
    // typing detector
    let typingTimer;
    const doneTypingInterval = 500;
    const input = document.querySelector("input#conversation-search");
    const conversation_list = document.querySelector("#conversation-list");
    let conversations_placeholder = document.querySelector(".search_conversations");
    // conversation created failure toast
    const conversationFailureToast = Toastify({
      text: "Error creating a conversation!",
      duration: 1000,
    });
    function closeModal() {
      modal.style.display = "none";
      // reset
      conversations_placeholder.style.display = "none";
      input.value = "";
    }
    function openModal() {
      modal.style.display = "block";
    }
    //on keyup, start the countdown
    input.addEventListener("keyup", function () {
      clearTimeout(typingTimer);
      // reset
      conversations_placeholder.style.display = "none";
      if (input.value) {
        typingTimer = setTimeout(searchConversations, doneTypingInterval); //user is "finished typing," send search request
      }
    });
    //on keydown, clear the countdown
    input.addEventListener("keydown", function () {
      clearTimeout(typingTimer);
    });
    // send request for search
    async function searchConversations() {
      let response = await fetch("/inbox/search", {
        method: "POST",
        body: JSON.stringify({
          conversation: input.value,
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
      });
      // get response
      let result = await response.json();
      // handle error and response
      if (result.errors) {
        const errorplaceholder = document.querySelector("p.error");
        errorplaceholder.textContent = result.errors.common.msg;
        errorplaceholder.style.display = "block";
      } else {
        if (result.length > 0) {
          let generatedHtml = "<ul>";
          result.forEach((conversation) => {

            const avatar = "./images/nophoto.png";
            generatedHtml += `<li onclick="getMessages('${conversation._id}', '${conversation.title}-${conversation.batch}')">
                <div class="conversation">
                  <div class="avatar">
                    <img src="${avatar}" />
                  </div>
                  <div class="username">${conversation.title}-${conversation.batch}</div>
                </div>
              </li>`;
          });
          generatedHtml += "</ul>";
          conversations_placeholder.innerHTML = generatedHtml;
          conversations_placeholder.style.display = "block";
        }
      }
    }

   //get messages
   // get messages of a conversation
   async function getMessages(conversation_id, current_conversation_name){
        // messages failure toast
        /* const messagesFailureToast = Toastify({
          text: "Error loading messages!",
          duration: 1000,
        }); */
        let response = await fetch(`/inbox/messages/${conversation_id}`);
        const result= await response.json();
        console.log("messages: ", result);
        if(!result.errors && result.data) {
            form.style.visibility = 'visible';
            
            const {data, user, conversation_id} = result;
            participant = data.participant; // this is an array
            current_conversation_id = conversation_id;
            if(data.messages) {
              let allMessages = '';
              if(data.messages.length > 0) {
                data.messages.forEach((message) => {
                  // console.log("message: ", message.sender.profilePics);
                  let senderAvatar = `${message.sender.profilePics}`;
                  const messageClass = message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
                  const showAvatar = message.sender.id === loggedinUserId ? '' : `<img src="${senderAvatar}" alt="${message.sender.name}" />`;
                  const showMessage = messageClass === "other-message" ? `<div class="message-text">${message.message}</div><br />` : `<div class="message-text">${message.message}</div>`;
                  
                  // final message html
                  let messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
                      ${showAvatar}
                      ${showMessage}
                      <div class="message-time">${moment(message.date_time).fromNow()}</div>
                    </div></div>`;
                  allMessages += messageHTML;
                  messageContainer.innerHTML = allMessages;
                });
              } else if(data.messages.length === 0) {
                messageContainer.innerHTML = '<div class="nothing"><img src="./images/Empty-Trash-icon.png" /></div>';
              }
              chatTitleContainer.textContent = current_conversation_name;
            }
        } else {
          messagesFailureToast.showToast();
        }
    }
    
  </script>